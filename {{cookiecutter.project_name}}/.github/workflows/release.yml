name: Build, Sign, and Publish

on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            arch: x86_64
            runs-on: ubuntu-latest
          - os: linux
            arch: aarch64
            runs-on: ubuntu-24.04-arm
          - os: windows
            arch: amd64
            runs-on: windows-latest
          - os: macos
            arch: x86_64
            runs-on: macos-13 # Last intel runner
          - os: macos
            arch: arm64
            runs-on: macos-latest # Apple Silicon runner

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Trigger mypyc compilation
          {{cookiecutter.package_name | upper}}_COMPILE_MYPYC: "1"
          # Set archs for cibuildwheel
          CIBW_ARCHS: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: pypa/build@v0.10.0
        with:
          sdist: true
          out-dir: dist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish:
    name: Sign and Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/{{cookiecutter.project_name}}
    permissions:
      id-token: write # For PyPI trusted publishing
      contents: write # For uploading assets to a GitHub release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload all files in dist directory to the release
        run: >-
          gh release upload
          "${{ github.event.release.tag_name }}" ./dist/*
          --repo "$GITHUB_REPOSITORY"

      - name: Remove sigstore files before publishing to PyPI
        run: rm -f dist/*.sigstore

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
