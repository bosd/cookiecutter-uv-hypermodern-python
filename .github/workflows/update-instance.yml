name: Update instance
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
env:
  TEMPLATE: cookiecutter-uv-hypermodern-python
  PROJECT: cookiecutter-uv-hypermodern-python

jobs:
  instance:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Check out Template Repository
        uses: actions/checkout@v4
        with:
          repository: bosd/${{ env.TEMPLATE }}
          path: ${{ env.TEMPLATE }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out Project Repository
        uses: actions/checkout@v4
        with:
          repository: bosd/${{ env.PROJECT }}
          path: ${{ env.PROJECT }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          uv-version: "0.2.14" # It's good practice to pin a version

      - name: Create uv virtual environment for build
        run: uv venv

      - name: Install dependencies
        working-directory: ${{ env.TEMPLATE }}
        run: |
          uv pip install --constraint=.github/workflows/constraints.txt cutty
          uv run cutty --version

      - name: Import changes into project
        working-directory: ${{ env.TEMPLATE }}
        run: |
          uv run cutty import --non-interactive --cwd=../${{ env.PROJECT }} --revision=${{ github.sha }}
        env:
          GIT_AUTHOR_NAME: "GitHub Action"
          GIT_AUTHOR_EMAIL: "action@github.com"

      - name: Push updates to project
        working-directory: ${{ env.PROJECT }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

          if git diff --exit-code; then
            echo "No changes to commit."
          else
            git add .
            git commit -m "chore: Update from template"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.X_GITHUB_TOKEN }}
