name: Update instance
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
env:
  TEMPLATE: cookiecutter-uv-hypermodern-python
  PROJECT: cookiecutter-uv-hypermodern-python

jobs:
  instance:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This permission is needed to push changes to the repository.
    steps:
      - name: Check out Template Repository
        uses: actions/checkout@v4
        with:
          repository: bosd/${{ env.TEMPLATE }}
          path: ${{ env.TEMPLATE }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out Project Repository
        uses: actions/checkout@v4
        with:
          repository: bosd/${{ env.PROJECT }}
          path: ${{ env.PROJECT }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          uv-version: "0.2.14" # Pinning a version is good practice.

      - name: Update project from template
        run: |
          uv venv
          source .venv/bin/activate

          uv pip install --constraint=${{ env.TEMPLATE }}/.github/workflows/constraints.txt cutty

          project_path="${{ env.PROJECT }}"
          template_url="https://github.com/bosd/${{ env.TEMPLATE }}.git"
          template_dir="${{ env.TEMPLATE }}"

          cat > "$project_path/cutty.json" << EOF
          {
            "template": {
              "location": "$template_url",
              "directory": "$template_dir",
              "revision": "${{ github.sha }}"
            },
            "bindings": {}
          }
          EOF

          cd "$project_path"
          cutty import --non-interactive

      - name: Push updates to project
        working-directory: ${{ env.PROJECT }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          if ! git diff --exit-code; then
            git add .
            git commit -m "chore: Update from template"
            git push origin main
          else
            echo "No changes to commit."
          fi
        env:
          # Use the default GitHub token for authentication
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
